name: build

on:
  push:
    tags:
      - 'v*' # git tag v[major].[minor].[build]
      - 'snapshot-*' # git tag snapshot-[id]
    branches: [meson] # TODO: replace with master
  pull_request:
    branches: [meson] # TODO: replace with master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        # os: [ubuntu-latest, windows-latest]
    env:
      MESON_PARAMS: -Dbuildtype=release -Dstatic=prebuilt -Dignore_updates=false -Dinstall_check=true
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - id: parse_ref
        run: python ./.github/parse_ref.py
      - run: python -m pip install meson ninja
      - if: matrix.os == 'windows-latest'
        run: .\.github\invoke-vcvarsall.bat
      - if: steps.parse_ref.outputs.TYPE == 'release'
        run: meson ${{ env.MESON_PARAMS }} -Dversion_major=${{ steps.parse_ref.outputs.MAJOR }} -Dversion_minor=${{ steps.parse_ref.outputs.MINOR }} -Dversion_build=${{ steps.parse_ref.outputs.BUILD }} build
      - if: steps.parse_ref.outputs.TYPE == 'snapshot'
        run: meson ${{ env.MESON_PARAMS }} -Dsnapshot=true -Dsnapshot_id=${{ steps.parse_ref.outputs.ID }} build
      - if: steps.parse_ref.outputs.TYPE == 'master'
        run: meson ${{ env.MESON_PARAMS }} build
      - run: cd build && ninja
      - if: matrix.os == 'ubuntu-latest'
        run: cd build && 7z a ../powder.zip powder render font
      - run: 7z a powder.zip README.md LICENSE
      - id: create_release
        if: steps.parse_ref.outputs.TYPE != 'master'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ steps.parse_ref.outputs.NAME }}
          draft: true
          prerelease: false
      - uses: actions/upload-release-asset@v1
        if: steps.parse_ref.outputs.TYPE != 'master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: powder.zip
          asset_name: powder-${{ steps.parse_ref.outputs.NAME }}.zip
          asset_content_type: application/zip
      - uses: actions/upload-artifact@v2
        if: steps.parse_ref.outputs.TYPE == 'master'
        with:
          path: powder.zip
          name: powder-${{ steps.parse_ref.outputs.NAME }}.zip
