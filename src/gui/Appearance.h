#pragma once

#include "Color.h"

namespace gui
{
	class Appearance
	{
	public:
		struct CommonPerPart
		{
			Color body, border, text, indicator, shadow;
		};
		struct CommonPerStatus
		{
			CommonPerPart idle, hover, disabled;
		};
		struct CommonPerActive
		{
			CommonPerStatus inactive, active;
		};

		static constexpr CommonPerActive colors = {
			{ // inactive
				{ // idle
					{ 0x00, 0x00, 0x00, 0xFF }, // body
					{ 0xE0, 0xE0, 0xE0, 0xFF }, // border
					{ 0xFF, 0xFF, 0xFF, 0xFF }, // text
					{ 0x00, 0x00, 0x00, 0xFF }, // indicator
					{ 0x00, 0x00, 0x00, 0xFF }, // shadow
				},
				{ // hover
					{ 0x20, 0x20, 0x20, 0xFF }, // body
					{ 0xFF, 0xFF, 0xFF, 0xFF }, // border
					{ 0xFF, 0xFF, 0xFF, 0xFF }, // text
					{ 0x40, 0x40, 0x40, 0xFF }, // indicator
					{ 0x00, 0x00, 0x00, 0xFF }, // shadow
				},
				{ // disabled
					{ 0x00, 0x00, 0x00, 0xFF }, // body
					{ 0x70, 0x70, 0x70, 0xFF }, // border
					{ 0xFF, 0x00, 0xFF, 0xFF }, // text (not used, magenta)
					{ 0x00, 0x00, 0x00, 0xFF }, // indicator
					{ 0x00, 0x00, 0x00, 0xFF }, // shadow
				},
			},
			{ // active
				{ // idle
					{ 0xC0, 0xC0, 0xC0, 0xFF }, // body
					{ 0xE0, 0xE0, 0xE0, 0xFF }, // border
					{ 0xFF, 0xFF, 0xFF, 0xFF }, // text
					{ 0xFF, 0xFF, 0xFF, 0xFF }, // indicator
					{ 0x00, 0x00, 0x00, 0xFF }, // shadow
				},
				{ // hover
					{ 0xE0, 0xE0, 0xE0, 0xFF }, // body
					{ 0xFF, 0xFF, 0xFF, 0xFF }, // border
					{ 0xFF, 0xFF, 0xFF, 0xFF }, // text
					{ 0xFF, 0xFF, 0xFF, 0xFF }, // indicator
					{ 0x00, 0x00, 0x00, 0xFF }, // shadow
				},
				{ // disabled
					{ 0xA0, 0xA0, 0xA0, 0xFF }, // body
					{ 0x70, 0x70, 0x70, 0xFF }, // border
					{ 0xFF, 0x00, 0xFF, 0xFF }, // text (not used, magenta)
					{ 0x80, 0x80, 0x80, 0xFF }, // indicator
					{ 0x00, 0x00, 0x00, 0xFF }, // shadow
				},
			},
		};

		static constexpr Color informationTitle = { 0x8C, 0x8C, 0xFF, 0xFF };
		static constexpr Color warningTitle     = { 0xFF, 0xD8, 0x20, 0xFF };
		static constexpr Color errorTitle       = { 0xFF, 0x40, 0x20, 0xFF };

		static constexpr Color commonWhite     = { 0xFF, 0xFF, 0xFF, 0xFF };
		static constexpr Color commonLightGray = { 0xC0, 0xC0, 0xC0, 0xFF };
		static constexpr Color commonYellow    = { 0xFF, 0xD8, 0x20, 0xFF };
		static constexpr Color commonRed       = { 0xFF, 0x00, 0x00, 0xFF };
		static constexpr Color commonLightRed  = { 0xFF, 0x4B, 0x4B, 0xFF };
		static constexpr Color commonBlue      = { 0x00, 0x00, 0xFF, 0xFF };
		static constexpr Color commonLightBlue = { 0x20, 0xAA, 0xFF, 0xFF };
		static constexpr Color commonPurple    = { 0x93, 0x53, 0xD3, 0xFF };

		static constexpr Color voteUp             = { 0x00, 0xBF, 0x00, 0xFF };
		static constexpr Color voteUpBackground   = { 0x00, 0x5F, 0x00, 0xFF };
		static constexpr Color voteDown           = { 0xBF, 0x00, 0x00, 0xFF };
		static constexpr Color voteDownBackground = { 0x5F, 0x00, 0x00, 0xFF };

		static constexpr bool darkColor(Color color)
		{
			return color.b + 3 * color.g + 2 * color.r < 544;
		}
	};
}
